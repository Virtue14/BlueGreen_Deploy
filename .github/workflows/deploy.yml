name: Blue-Green Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Install envsubst
        run: sudo apt-get install -y gettext

      - name: Create application.yml.template
        run: |
          mkdir -p src/main/resources
          cat > src/main/resources/application.yml.template <<EOL
          server:
            port: 5000
          EOL

      - name: Set Yaml
        run: |
          envsubst < src/main/resources/application.yml.template > src/main/resources/application.yml
          echo "Generated application.yml:"
          cat src/main/resources/application.yml

      - name: Check for Tests
        run: |
          if git diff --name-only origin/main HEAD | grep -qvE '(\.xml$|\.yml$|config/)'; then
            if [ -z "$(find src/test -name '*ServiceTest.java')" ]; then
              echo "No ServiceTest found, failing the build."
              exit 1
            fi
          else
            echo "Only configuration files changed, skipping test check."
          fi

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
        shell: bash

      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions deploy/.ebextensions
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ElaBeansBlue
          environment_name: ElaBeansBlue-env
          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip

      - name: Check Deployment Status
        run: |
          DEPLOY_STATUS=$(aws elasticbeanstalk describe-environments --environment-names ElaBeansBlue-env --query "Environments[0].Status" --output text --region ap-northeast-2)
          if [ "$DEPLOY_STATUS" != "Ready" ]; then
            echo "Deployment failed with status: $DEPLOY_STATUS"
            aws elasticbeanstalk describe-events --environment-name ElaBeansBlue-env --region ap-northeast-2 --max-items 10
            exit 1
          fi
